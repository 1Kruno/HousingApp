/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package housingapp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author x18110274
 * Krunoslav Bubanj
 */
public class HousingGUI extends javax.swing.JFrame{
    //dm declaration
    Property p;
    int noOfBeds;
    String theArea;
    int price;
    //array list for storing property objects
    ArrayList <Property> property = new ArrayList();
    //1d array with area names
    public static String[] Area = {"Dublin 1", "Dublin 2", "Dublin 3", "Dublin 4", "Dublin 5", "Dublin 6",
                     "Dublin 6w", "Dublin 7", "Dublin 8", "Dublin 9", "Dublin 10", "Dublin 11",
                     "Dublin 12", "Dublin 13", "Dublin 14", "Dublin 15", "Dublin 16", "Dublin 17",
                     "Dublin 18", "Dublin 20", "Dublin 22", "Dublin 24" };
        
    
       //2d array containing area(for easier comparison) and prices of houses for 2 bed house, 3 bed house and 4 bed house
    public static int[][] HousePrice = { {1, 1923, 2399, 2966},
                               {2, 2193, 2606, 3102},
                               {3, 1832, 2129, 2434},
                               {4, 2244, 2571, 2878},
                               {5, 1644, 1923, 2117},
                               {6, 2040, 2386, 2627},
                               {61, 1807, 2114, 2327},
                               {7, 1781, 2083, 2294},
                               {8, 1874, 2191, 2413},
                               {9, 1658, 1939, 2135},
                               {10, 1526, 1785, 1965},
                               {11, 1551, 1814, 1997},
                               {12, 1637, 1915, 2108},
                               {13, 1620, 1895, 2086},
                               {14, 1788, 2092, 2303},
                               {15, 1504, 1759, 1936},
                               {16, 1633, 1910, 2103},
                               {17, 1558, 1823, 2007},
                               {18, 1809, 2115, 2329},
                               {20, 1631, 1907, 2100},
                               {22, 1473, 1723, 1897},
                               {24, 1507, 1763, 1941},   
    };
    //2d array containing area(for easier comparison) and prices of apartments for studio apartment, 2 bed apartments and 3 bed apartments
    public static int[][] ApartmentPrice = { {1, 1585, 1895, 2300},
                               {2, 1834, 2250, 2602},
                               {3, 1553, 1850, 2034},
                               {4, 1981, 2383, 2778},
                               {5, 1426, 1623, 1917},
                               {6, 1770, 1886, 2127},
                               {61, 1567, 1814, 2027},
                               {7, 1545, 1783, 1994},
                               {8, 1625, 1891, 2013},
                               {9, 1438, 1739, 1935},
                               {10, 1324, 1585, 1965},
                               {11, 1345, 1414, 1797},
                               {12, 1420, 1615, 1808},
                               {13, 1405, 1595, 1886},
                               {14, 1551, 1792, 2003},
                               {15, 1304, 1659, 1936},
                               {16, 1416, 1710, 2003},
                               {17, 1352, 1523, 2007},
                               {18, 1569, 2015, 2329},
                               {20, 1414, 1707, 2100},
                               {22, 1278, 1523, 1897},
                               {24, 1307, 1663, 1939},
            
        
    };
    /**
     * Creates new form HousingGUI
     */
    public HousingGUI() {
        initComponents();
        //hides labels and buttons upon loading
        cmbhousebeds.setVisible(false);
        cmbapartmentbeds.setVisible(false);
        lblhousebed.setVisible(false);
        lblaprtmentbed.setVisible(false);
         btnreview.setVisible(false);
        btncompare.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbproperty = new javax.swing.JComboBox<>();
        lbltitle = new javax.swing.JLabel();
        cmbarea = new javax.swing.JComboBox<>();
        lblproperty = new javax.swing.JLabel();
        lblarea = new javax.swing.JLabel();
        btngetprice = new javax.swing.JButton();
        cmbhousebeds = new javax.swing.JComboBox<>();
        cmbapartmentbeds = new javax.swing.JComboBox<>();
        btnreview = new javax.swing.JButton();
        lblhousebed = new javax.swing.JLabel();
        lblaprtmentbed = new javax.swing.JLabel();
        btncompare = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 500));
        setMinimumSize(new java.awt.Dimension(600, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 500));

        cmbproperty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "House", "Apartment" }));
        cmbproperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbpropertyActionPerformed(evt);
            }
        });

        lbltitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbltitle.setText("Housing App");

        cmbarea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dublin 1", "Dublin 2", "Dublin 3", "Dublin 4", "Dublin 5", "Dublin 6", "Dublin 6w", "Dublin 7", "Dublin 8", "Dublin 9", "Dublin 10", "Dublin 11", "Dublin 12", "Dublin 13", "Dublin 14", "Dublin 15", "Dublin 16", "Dublin 17", "Dublin 18", "Dublin 20", "Dublin 22", "Dublin 24" }));
        cmbarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbareaActionPerformed(evt);
            }
        });

        lblproperty.setText("Property type");

        lblarea.setText("Area");

        btngetprice.setText("Get average price");
        btngetprice.setPreferredSize(null);
        btngetprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngetpriceActionPerformed(evt);
            }
        });

        cmbhousebeds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2 beds", "3 beds", "4 beds" }));
        cmbhousebeds.setMaximumSize(new java.awt.Dimension(119, 39));
        cmbhousebeds.setMinimumSize(new java.awt.Dimension(119, 39));
        cmbhousebeds.setPreferredSize(new java.awt.Dimension(119, 39));
        cmbhousebeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbhousebedsActionPerformed(evt);
            }
        });

        cmbapartmentbeds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Studio", "2 beds", "3 beds" }));
        cmbapartmentbeds.setMaximumSize(new java.awt.Dimension(119, 39));
        cmbapartmentbeds.setMinimumSize(new java.awt.Dimension(119, 39));
        cmbapartmentbeds.setName(""); // NOI18N
        cmbapartmentbeds.setPreferredSize(new java.awt.Dimension(119, 39));
        cmbapartmentbeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbapartmentbedsActionPerformed(evt);
            }
        });

        btnreview.setText("Review search");
        btnreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreviewActionPerformed(evt);
            }
        });

        lblhousebed.setText("Number of bedrooms");

        lblaprtmentbed.setText("Number of bedrooms");
        lblaprtmentbed.setPreferredSize(new java.awt.Dimension(120, 14));

        btncompare.setText("Compare prices");
        btncompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompareActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbarea, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbproperty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbhousebeds, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbapartmentbeds, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(btngetprice, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(lblhousebed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblaprtmentbed, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblarea)
                        .addGap(281, 281, 281))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnreview, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(btncompare, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblproperty)
                        .addGap(257, 257, 257))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbltitle)
                        .addGap(235, 235, 235))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lbltitle)
                        .addGap(18, 18, 18)
                        .addComponent(cmbproperty, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblproperty)
                        .addGap(20, 20, 20)
                        .addComponent(cmbarea, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblarea)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbapartmentbeds, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbhousebeds, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblhousebed)
                            .addComponent(lblaprtmentbed, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 92, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btngetprice, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnreview, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncompare, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbpropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbpropertyActionPerformed
        // TODO add your handling code here:
            
         if(cmbproperty.getSelectedItem().equals("House"))
        {
            cmbhousebeds.setVisible(true); // reveals labels and buttons
            cmbapartmentbeds.setVisible(false);
            lblhousebed.setVisible(true);
            lblaprtmentbed.setVisible(false);
             p = new House(); // creates new object(instance of a house class)
        }
         else if(cmbproperty.getSelectedItem().equals("Apartment"))
        {
            cmbhousebeds.setVisible(false); // reveals labels and buttons
            cmbapartmentbeds.setVisible(true);
            lblaprtmentbed.setVisible(true);
            lblhousebed.setVisible(false);
              p = new Apartment(); // creates new object(instance of an apartment class)
        }
         else{JOptionPane.showMessageDialog(null, "Please select one of the options");}
    }//GEN-LAST:event_cmbpropertyActionPerformed

     private void writeTextToFile(){
        //writes value of the last search to a file
        File outFile; //creates File
        FileWriter fw; //creates FileWriter
        BufferedWriter bw; //creates BufferedWriter

        int quote = (p.getPrice()); //creates integer with value of price for object p
        String quote1 = String.valueOf(quote); //turns that integer into string

        try {
            outFile = new File("prices.dat"); //creates new instance of File
            fw = new FileWriter(outFile); //creates new instance of FileWriter
            bw = new BufferedWriter(fw); //creates new instance of BufferedWriter

            bw.write(quote1); //writes string
            bw.newLine();
            bw.close(); //closes writer
            System.out.println("info added"); //makes a console info that the info has been written on file
        } catch (IOException x) {
            System.out.println("Error " + x); //catches and dispalys error
        }
}

    public void readTextFromFile()
    {
     try{
        FileInputStream fs = new FileInputStream("prices.dat"); //creates file input stream
        BufferedReader br = new BufferedReader(new InputStreamReader(fs)); //creates buffered reader
        
        ArrayList<String> array = new ArrayList<>(); // creates an instance of array list
        
        String line; //creates string
        String lastValue = ""; //creates empty string
        
        while ((line = br.readLine()) != null) { //detects and reads value from array list
            array.add(line);
        }
        
        array.add(lastValue); //adds string to array

        JOptionPane.showMessageDialog(null,"In the last search, the price of the average rent was: €"+ array.get(0)); //displays 1st index in array list
        }
        catch(IOException y){
            System.out.println("error" + y); //catches and displays error
        }
    }
    
    
    private void cmbareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbareaActionPerformed
        // TODO add your handling code here:

        for(int x=0;x<25;x++){ //sets parameters for the loop
        if(cmbarea.getSelectedItem().equals(Area[x])){ //takes the value from combobox, runs it through 1d array of areas
            theArea = Area[x]; //sets that value from array as area
            break; //exits the loop
        }
        }   
    }//GEN-LAST:event_cmbareaActionPerformed
    
    private void btngetpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngetpriceActionPerformed
        // TODO add your handling code here:
         if(cmbproperty.getSelectedItem().equals("House")){ //sets parameter for combobox values of property types
            if(cmbhousebeds.getSelectedItem().equals("2 beds")){ //sets parameter for combobox values of the number of beds
                p.setNoOfBeds(2); //sets number of beds for object p
                for(int x=0;x<25;x++){ //sets parameter for loop
                if(cmbarea.getSelectedItem().equals(Area[x])){ //sets parameter for combobox values of array of areas
                p.setPrice(HousePrice[x][1]); //sets the price for object p
                property.add(p); //adds object p to the array list
                break; //exits the loop
            }
            }}
            else if(cmbhousebeds.getSelectedItem().equals("3 beds")){
                p.setNoOfBeds(3);
                for(int x=0;x<25;x++){
                if(cmbarea.getSelectedItem().equals(Area[x])){
                p.setPrice(HousePrice[x][2]);
                property.add(p);
                break;
            }
            }}
            else if(cmbhousebeds.getSelectedItem().equals("4 beds")){
                p.setNoOfBeds(4);
                for(int x=0;x<25;x++){
                if(cmbarea.getSelectedItem().equals(Area[x])){
                p.setPrice(HousePrice[x][3]);
                property.add(p);
                break;
        }
    }}}
         else if(cmbproperty.getSelectedItem().equals("Apartment")){
            if(cmbapartmentbeds.getSelectedItem().equals("Studio")){
                p.setNoOfBeds(1);
                for(int x=0;x<25;x++){
                if(cmbarea.getSelectedItem().equals(Area[x])){
                p.setPrice(ApartmentPrice[x][1]);
                property.add(p);
                break;
            }
            }}
            else if(cmbapartmentbeds.getSelectedItem().equals("2 beds")){
                p.setNoOfBeds(2);
                for(int x=0;x<25;x++){
                if(cmbarea.getSelectedItem().equals(Area[x])){
                p.setPrice(ApartmentPrice[x][2]);
                property.add(p);
                break;
            }
            }}
            else if(cmbapartmentbeds.getSelectedItem().equals("3 beds")){
                p.setNoOfBeds(3);
                for(int x=0;x<25;x++){
                if(cmbarea.getSelectedItem().equals(Area[x])){
                p.setPrice(ApartmentPrice[x][3]);
                property.add(p);
                break;
        }
    }}}
            //retrieves the values from comboboxes for property type and area
           {//retrieves the values from object p for number of beds and price and displays that values
           JOptionPane.showMessageDialog(null,"Property info: "+cmbproperty.getSelectedItem()+" in "+
                   cmbarea.getSelectedItem()+ "\n Number of beds "+p.getNoOfBeds()+"\n Average price: €"+p.getPrice() );
           }
        System.out.println("the price "+p.getPrice()); //console message showing property price
        writeTextToFile(); //writes info to file
        btnreview.setVisible(true); //reveals button
        btncompare.setVisible(true); //reveals button
    }//GEN-LAST:event_btngetpriceActionPerformed

    private void cmbhousebedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbhousebedsActionPerformed
        // TODO add your handling code here:
        
        int noOfBeds = 1; //declaration of integer with base value of 1
        
        if(cmbhousebeds.getSelectedItem().equals("2 beds")){ //sets condition for combobox
            p.setNoOfBeds(noOfBeds + 1); //sets value for nuber of beds for object p
            property.add(p); //adds object p to the array list
        }
        else if(cmbhousebeds.getSelectedItem().equals("3 beds")){
            p.setNoOfBeds(noOfBeds + 2);
            property.add(p);
        }
        else if(cmbhousebeds.getSelectedItem().equals("4 beds")){
            p.setNoOfBeds(noOfBeds + 3);
            property.add(p);
        }
        else{JOptionPane.showMessageDialog(null, "Please select number of bedrooms");
        }
        
    }//GEN-LAST:event_cmbhousebedsActionPerformed

    private void cmbapartmentbedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbapartmentbedsActionPerformed
        // TODO add your handling code here:
        
        int noOfBeds = 1;
        
        if(cmbapartmentbeds.getSelectedItem().equals("Studio")){
            p.setNoOfBeds(noOfBeds);
            property.add(p);
        }
        else if(cmbapartmentbeds.getSelectedItem().equals("2 beds")){
            p.setNoOfBeds(noOfBeds + 1);
            property.add(p);
        }
        else if(cmbapartmentbeds.getSelectedItem().equals("3 beds")){
            p.setNoOfBeds(noOfBeds + 2);
            property.add(p);
        }
        else{JOptionPane.showMessageDialog(null, "Please select number of bedrooms");
        }
       
    }//GEN-LAST:event_cmbapartmentbedsActionPerformed

    private void btnreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreviewActionPerformed
        // TODO add your handling code here:
       readTextFromFile(); //calls method for reading value from file
    }//GEN-LAST:event_btnreviewActionPerformed

    private void btncompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompareActionPerformed
        // TODO add your handling code here:
        
        try{
        FileInputStream fs = new FileInputStream("prices.dat");
        BufferedReader br = new BufferedReader(new InputStreamReader(fs));
        
        ArrayList<String> array = new ArrayList<>();
        
        String line;
        
        while ((line = br.readLine()) != null) {
            array.add(line);
        }

        String savedRent = array.get(0); //creates string with value from the first index in the array
        int USavedrent = Integer.parseInt(savedRent); //turns that string to integer
        
        String UserRent = JOptionPane.showInputDialog(null,"Enter your monthly rent amount"); //prompts user to enter value which is saved into string
        int rent = Integer.parseInt(UserRent); //creates integer which gets value from previous string and coverts it into integer
        
        if(rent<USavedrent){ //sets condition if the average rent is lower than what the user entered
            JOptionPane.showMessageDialog(null,"You are paying less than the average price"); //displays appropriate message
        }
        else if(rent==USavedrent){ //displays appropriate message if the values are the same
            JOptionPane.showMessageDialog(null,"You are paying the average price"); //displays appropriate message
        }
        else{
            JOptionPane.showMessageDialog(null,"You are paying more than the average price"); //displays appropriate message if the user is paying more
        }
        
        }
        catch(IOException y){
            System.out.println("error" + y);
        }
        
        
        
    }//GEN-LAST:event_btncompareActionPerformed

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HousingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HousingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HousingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HousingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HousingGUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncompare;
    private javax.swing.JButton btngetprice;
    private javax.swing.JButton btnreview;
    private javax.swing.JComboBox<String> cmbapartmentbeds;
    private javax.swing.JComboBox<String> cmbarea;
    private javax.swing.JComboBox<String> cmbhousebeds;
    private javax.swing.JComboBox<String> cmbproperty;
    private javax.swing.JLabel lblaprtmentbed;
    private javax.swing.JLabel lblarea;
    private javax.swing.JLabel lblhousebed;
    private javax.swing.JLabel lblproperty;
    private javax.swing.JLabel lbltitle;
    // End of variables declaration//GEN-END:variables
}
